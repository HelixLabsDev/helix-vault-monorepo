type ProposalAction = variant {
  CreateVault : record { token_symbol : text };
  UpgradeVault : record { vault_id : text; new_code_hash : vec nat8 };
};

type ProposalStatus = variant {
  Pending;
  Approved;
  Rejected;
  Executed;
};

type GovernanceProposal = record {
  id : nat64;
  proposer : principal;
  title : text;
  description : text;
  action : ProposalAction;
  status : ProposalStatus;
  votes_for : nat64;
  votes_against : nat64;
  deadline : nat64;
  voters: vec principal;
  executed_vault_id : opt principal;
};

service : {
  submit_proposal : (record {
    title : text;
    description : text;
    action : ProposalAction;
    duration_secs : nat64; // âœ… ADDED
  }) -> (nat64);

  vote_proposal : (nat64, bool) -> (variant { Ok : null; Err : text });

  execute_proposal : (nat64) -> (variant { Ok : principal; Err : text });

  get_proposal : (nat64) -> (opt GovernanceProposal) query;

  list_proposals : () -> (vec GovernanceProposal) query;

  list_created_vaults : () -> (vec principal) query;

  add_controller_to_vault: (principal, principal) -> (variant { ok: null; err: text });
};
